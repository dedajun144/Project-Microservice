package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"

	_ "github.com/go-sql-driver/mysql"
	"github.com/gorilla/mux"
)

type AutoGenerated []struct {
    Sku         string `json:"Sku"`
    ProductName string `json:"Product_name"`
    Stocks      int    `json:"Stocks"`
}

type Ongkir struct {
	Rajaongkir struct {
		Query struct {
			Origin      string `json:"origin"`
			Destination string `json:"destination"`
			Weight      int    `json:"weight"`
			Courier     string `json:"courier"`
		} `json:"query"`
		Status struct {
			Code        int    `json:"code"`
			Description string `json:"description"`
		} `json:"status"`
		OriginDetails struct {
			CityID     string `json:"city_id"`
			ProvinceID string `json:"province_id"`
			Province   string `json:"province"`
			Type       string `json:"type"`
			CityName   string `json:"city_name"`
			PostalCode string `json:"postal_code"`
		} `json:"origin_details"`
		DestinationDetails struct {
			CityID     string `json:"city_id"`
			ProvinceID string `json:"province_id"`
			Province   string `json:"province"`
			Type       string `json:"type"`
			CityName   string `json:"city_name"`
			PostalCode string `json:"postal_code"`
		} `json:"destination_details"`
		Results []struct {
			Code  string `json:"code"`
			Name  string `json:"name"`
			Costs []struct {
				Service     string `json:"service"`
				Description string `json:"description"`
				Cost        []struct {
					Value int    `json:"value"`
					Etd   string `json:"etd"`
					Note  string `json:"note"`
				} `json:"cost"`
			} `json:"costs"`
		} `json:"results"`
	} `json:"rajaongkir"`
}

func getDataServer1(w http.ResponseWriter, r *http.Request){
    url := "http://localhost:5010/getOngkir"
    req, _ := http.NewRequest("GET", url, nil)
    res, _ := http.DefaultClient.Do(req)
    defer res.Body.Close()
    body, _ := ioutil.ReadAll(res.Body)

    //fmt.Println(res)
    //fmt.Println(string(body))
    var ongkir Ongkir
    json.Unmarshal(body, &ongkir)
    /*ongkir.ProvinceID = ongkir.ProvinceID
    ongkir.Province = ongkir.Province
    ongkir.CityName = ongkir.CityID
    ongkir.CityID = ongkir.CityName*/
    json.NewEncoder(w).Encode(ongkir)
}
func defaults(w http.ResponseWriter, r *http.Request){
    fmt.Println("halo")
}

func getDataServer2(w http.ResponseWriter, r *http.Request){
    url := "http://localhost:3000/getProducts"
    req, _ := http.NewRequest("GET", url, nil)
    res, _ := http.DefaultClient.Do(req)
    defer res.Body.Close()
    body, _ := ioutil.ReadAll(res.Body)

    //fmt.Println(res)
    //fmt.Println(string(body))
    var products AutoGenerated
    json.Unmarshal(body, &products)
    json.NewEncoder(w).Encode(products)
}

func main() {
    router := mux.NewRouter()
    router.HandleFunc("/getDataServer1",getDataServer1).Methods("GET") // menjalurkan URL untuk dapat mengkases data JSON API product ke /getproducts
    router.HandleFunc("/getDataServer2",getDataServer2).Methods("GET") // menjalurkan URL untuk dapat mengkases data JSON API product ke /getproducts
    router.HandleFunc("/defaults",defaults).Methods("GET") // menjalurkan URL untuk dapat mengkases data JSON API product ke /getproducts
    http.Handle("/",router)
    log.Fatal(http.ListenAndServe(":1234",router))
}